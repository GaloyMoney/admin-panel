{"version":3,"sources":["utils/index.js","components/Header.js","components/Login.js","components/Dashboard.js","components/UserDetails.js","components/AddToMap.js","App.js","reportWebVitals.js","index.js"],"names":["validatePhone","phone","length","validateOtp","otp","validateUsername","username","validateAddToMapInputs","title","latitude","longitude","isFinite","Math","abs","logout","localStorage","clear","window","location","href","Header","Navbar","bg","variant","Container","Brand","Image","src","rounded","Nav","className","Link","Button","onClick","GENERATE_OTP","gql","LOGIN","Login","useState","setPhone","otpGenerated","setOtpGenerated","setOtp","useMutation","onCompleted","requestPhoneCode","success","onError","error","console","alert","message","generateOTP","otpGenerating","loading","token","login","setItem","setAuthenticated","navigate","Form","onSubmit","event","preventDefault","variables","Group","size","Control","autoFocus","type","placeholder","value","onChange","e","target","block","disabled","parseInt","Dashboard","fluid","style","marginTop","Row","Col","md","GET_USER","UserDetails","getItem","setUsername","userDetails","setUserDetails","useLazyQuery","context","headers","Authorization","getUserDetails","getUser","gettingUser","inline","Table","bordered","hover","striped","margin","coordinate","Date","created_at","ADD_TO_MAP","AddToMap","setTitle","setLatitude","setLongitude","resetValues","addToMap","forEach","state","parseFloat","routes","dashboardRoutes","AuthedPages","routeResult","useRoutes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","env","GRAPHQL_URI","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b30942d.chunk.js","sourcesContent":["export function validatePhone(phone) {\n  return phone.length > 10 && phone.length <= 15\n}\n\nexport function validateOtp(otp) {\n  return otp.length === 6\n}\n\nexport function validateUsername(username) {\n  return username.length >= 3\n}\n\nexport function validateAddToMapInputs(username, title, latitude, longitude) {\n  //coordinate validation\n  if (!isFinite(latitude) || !(Math.abs(latitude) <= 90)) {\n    return false\n  }\n\n  if (!isFinite(longitude) || !(Math.abs(longitude) <= 180)) {\n    return false\n  }\n\n  if (!validateUsername(username)) {\n    return false\n  }\n\n  return title.length >= 3\n}\n\nexport const logout = () => {\n  localStorage.clear()\n  window.location.href = '/'\n}\n\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token')\n}\n","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport { logout } from '../utils'\n\nfunction Header() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"https://bitcoinbeach.com\">\n          <Image src={process.env.PUBLIC_URL + '/BBLogo.png'} rounded />\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/dashboard\">Home</Nav.Link>\n        </Nav>\n        <Nav>\n          <Button onClick={logout} variant=\"dark\">\n            Logout\n          </Button>\n        </Nav>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Header\n","import { gql, useMutation } from '@apollo/client'\nimport { navigate } from 'hookrouter'\nimport React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { validateOtp, validatePhone } from '../utils'\nimport Header from './Header'\nimport './Login.css'\n\nconst GENERATE_OTP = gql`\n  mutation requestPhoneCode($phone: String!) {\n    requestPhoneCode(phone: $phone) {\n      success\n    }\n  }\n`\n\nconst LOGIN = gql`\n  mutation login($phone: String!, $otp: Int!) {\n    login(phone: $phone, code: $otp) {\n      token\n    }\n  }\n`\n\nexport default function Login() {\n  const [phone, setPhone] = useState('')\n  const [otpGenerated, setOtpGenerated] = useState(false)\n  const [otp, setOtp] = useState('')\n\n  function setAuthenticated(token) {\n    localStorage.setItem('token', token)\n  }\n\n  const [generateOTP, { loading: otpGenerating }] = useMutation(GENERATE_OTP, {\n    onCompleted({ requestPhoneCode: { success } }) {\n      setOtpGenerated(true)\n    },\n    onError(error) {\n      console.error(error)\n      alert(error.message)\n    }\n  })\n\n  function submitPhone(event) {\n    event.preventDefault()\n    generateOTP({ variables: { phone } })\n  }\n\n  const [login] = useMutation(LOGIN, {\n    onCompleted({ login: { token } }) {\n      if(!token) {\n        alert('Incorrect OTP')\n      }\n      setAuthenticated(token)\n      navigate('/dashboard', true)\n    },\n    onError(error) {\n      console.error(error.message)\n    }\n  })\n\n  function submitOtp(event) {\n    event.preventDefault()\n    login({ variables: { phone, otp: parseInt(otp) } })\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"Login\">\n        {!otpGenerated && (\n          <Form onSubmit={submitPhone}>\n            <Form.Group size=\"lg\">\n              <Form.Control\n                autoFocus\n                type=\"tel\"\n                placeholder=\"Enter phone number\"\n                value={phone}\n                onChange={e => setPhone(e.target.value)}\n              />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" disabled={!validatePhone(phone)}>\n              Login\n            </Button>\n          </Form>\n        )}\n        {otpGenerating && <p>Loading...</p>}\n        {otpGenerated && (\n          <Form onSubmit={submitOtp}>\n            <Form.Group size=\"lg\">\n              <Form.Control\n                autoFocus\n                type=\"number\"\n                placeholder=\"Enter OTP\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateOtp(otp)}>\n              Submit\n            </Button>\n          </Form>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Header from \"./Header\";\n\nexport default function Dashboard() {\n  return (\n    <div>\n      <Header />\n      <Container fluid style={{ marginTop: \"50px\" }}>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <Button size=\"lg\" href=\"/dashboard/userDetails\">\n              User Details\n            </Button>\n          </Col>\n          <Col md=\"auto\">\n            <Button size=\"lg\" href=\"/dashboard/addToMap\">\n              Add Business To Map\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import { gql, useLazyQuery } from '@apollo/client'\nimport { useState } from 'react'\nimport { Container, Form } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Table from 'react-bootstrap/Table'\nimport { validatePhone, validateUsername } from '../utils'\nimport Header from './Header'\n\nconst GET_USER = gql`\n  query getUserDetails($phone: String, $username: String) {\n    getUserDetails(phone: $phone, username: $username) {\n      phone\n      username\n      created_at\n      coordinate {\n        latitude\n        longitude\n      }\n      title\n      created_at\n    }\n  }\n`\n\nfunction UserDetails() {\n  const token = localStorage.getItem('token')\n  const [phone, setPhone] = useState('')\n  const [username, setUsername] = useState('')\n  const [userDetails, setUserDetails] = useState('')\n\n  const [getUser, { loading: gettingUser }] = useLazyQuery(GET_USER, {\n    context: {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    },\n    onCompleted({ getUserDetails }) {\n      setUserDetails(getUserDetails)\n    },\n    onError(error) {\n      alert(error.message)\n      setUsername('')\n      setPhone('')\n    }\n  })\n\n  function submitPhone(event) {\n    event.preventDefault()\n    getUser({ variables: { phone } })\n  }\n\n  function submitUsername(event) {\n    event.preventDefault()\n    getUser({ variables: { username } })\n  }\n\n  return (\n    <div>\n      <Header />\n      <Container fluid>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <Form inline onSubmit={submitPhone}>\n              <Form.Group>\n                <Form.Control\n                  type=\"tel\"\n                  placeholder=\"Enter user's phone number\"\n                  value={phone}\n                  onChange={e => setPhone(e.target.value)}\n                />\n                <Button type=\"submit\" disabled={!validatePhone(phone)}>\n                  Submit\n                </Button>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md=\"auto\">\n            <Form inline onSubmit={submitUsername}>\n              <Form.Group>\n                <Form.Control\n                  placeholder=\"Enter user's username\"\n                  value={username}\n                  onChange={e => setUsername(e.target.value)}\n                />\n                <Button type=\"submit\" disabled={!validateUsername(username)}>\n                  Submit\n                </Button>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          {gettingUser && <Col md=\"auto\">Getting user details...</Col>}\n          {userDetails && (\n            <Table bordered hover striped style={{ margin: '15px' }}>\n              <thead>\n                <tr>\n                  <th>Phone</th>\n                  <th>Username</th>\n                  <th>Title</th>\n                  <th>Latitude</th>\n                  <th>Longtitude</th>\n                  <th>Created At</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{userDetails.phone}</td>\n                  <td>{userDetails.username}</td>\n                  <td>{userDetails.title}</td>\n                  <td>{userDetails.coordinate ? userDetails.coordinate.latitude : \"\"}</td>\n                  <td>{userDetails.coordinate? userDetails.coordinate.longitude : \"\"}</td>\n                  <td>{new Date(userDetails.created_at)}</td>\n                </tr>\n              </tbody>\n            </Table>\n          )}\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default UserDetails\n","import { gql, useMutation } from '@apollo/client'\nimport { useState } from 'react'\nimport { Container, Form } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { validateAddToMapInputs } from '../utils'\nimport Header from './Header'\n\nconst ADD_TO_MAP = gql`\n  mutation addToMap($username: String!, $title: String!, $latitude: Float!, $longitude: Float!) {\n    addToMap(username: $username, title: $title, latitude: $latitude, longitude: $longitude)\n  }\n`\n\nfunction AddToMap() {\n  const token = localStorage.getItem('token')\n  const [title, setTitle] = useState('')\n  const [username, setUsername] = useState('')\n  const [latitude, setLatitude] = useState('')\n  const [longitude, setLongitude] = useState('')\n\n  const [addToMap, { loading: addingToMap }] = useMutation(ADD_TO_MAP, {\n    context: {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    },\n    onCompleted() {\n      alert('Added successfully!')\n      resetValues()\n    },\n    onError(error) {\n      alert(error.message)\n    }\n  })\n\n  const resetValues = () => {\n    const states = [setLatitude, setLongitude, setUsername, setTitle]\n    states.forEach(state => state(''))\n  }\n\n  const submit = event => {\n    event.preventDefault()\n\n    addToMap({\n      variables: {\n        username,\n        title,\n        latitude: parseFloat(latitude),\n        longitude: parseFloat(longitude)\n      }\n    })\n  }\n\n  return (\n    <div>\n      <Header />\n      <Container fluid>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <Form onSubmit={submit}>\n              <Form.Group>\n                <Form.Control\n                  placeholder=\"Enter username\"\n                  value={username}\n                  onChange={e => setUsername(e.target.value)}\n                />\n                <Form.Control placeholder=\"Enter title\" value={title} onChange={e => setTitle(e.target.value)} />\n                <Form.Control\n                  placeholder=\"Enter latitude\"\n                  value={latitude}\n                  onChange={e => setLatitude(e.target.value)}\n                />\n                <Form.Control\n                  placeholder=\"Enter longitude\"\n                  value={longitude}\n                  onChange={e => setLongitude(e.target.value)}\n                />\n                <Button type=\"submit\" disabled={!validateAddToMapInputs(username, title, latitude, longitude)}>\n                  Submit\n                </Button>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default AddToMap\n","import Login from './components/Login'\nimport { useRoutes, navigate } from 'hookrouter'\nimport Dashboard from './components/Dashboard'\nimport UserDetails from './components/UserDetails'\nimport AddToMap from './components/AddToMap'\nimport { isAuthenticated } from './utils'\n\nconst routes = {\n  '/': () => <Login />,\n  '/dashboard*': () => <AuthedPages />\n}\n\nconst dashboardRoutes = {\n  '/': () => <Dashboard />,\n  '/userDetails': () => <UserDetails />,\n  '/addToMap': () => <AddToMap />\n}\n\nconst AuthedPages = () => {\n  const routeResult = useRoutes(dashboardRoutes)\n  if (!isAuthenticated()) {\n    navigate('/')\n  }\n  return routeResult\n}\n\nfunction App() {\n  const routeResult = useRoutes(routes)\n\n  return routeResult || <Login />\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: window.env.GRAPHQL_URI,\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}