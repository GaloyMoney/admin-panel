{"version":3,"sources":["utils/index.js","components/Header.js","components/Login.js","components/Dashboard.js","components/UserDetails.js","components/AddToMap.js","App.js","reportWebVitals.js","config/index.js","index.js"],"names":["reportError","errorMesssage","console","error","alert","validPhone","phone","length","validWalletName","walletName","validAddToMapInputs","title","latitude","longitude","isFinite","Math","abs","logout","window","sessionStorage","clear","location","href","Header","Navbar","bg","variant","Container","Brand","Image","src","rounded","Nav","className","Link","Button","onClick","REQUEST_AUTH_CODE","gql","LOGIN","Login","useState","setPhone","otp","setOtp","otpGenerated","setOtpGenerated","useMutation","requestAuthCode","requestAuthCodeLoading","loading","login","userLoginLoading","PhoneForm","event","a","preventDefault","variables","input","data","message","mutationData","errors","success","Form","onSubmit","Group","size","Control","autoFocus","type","placeholder","value","onChange","e","target","block","disabled","OTPForm","code","authToken","setItem","navigate","authCode","Dashboard","fluid","style","marginTop","Row","Col","md","GET_USER_BY_PHONE","GET_USER_BY_USERNAME","USER_UPDATE_STATUS","USER_UPDATE_LEVEL","UserDetails","React","setWalletName","userDetails","setUserDetails","useLazyQuery","onCompleted","onError","getUserByPhone","gettingUserByPhone","getUserByUsername","gettingUserByUsername","updateUserStatus","updateUserLevel","inline","Table","bordered","hover","striped","margin","coordinates","Date","parseInt","createdAt","toString","level","uid","id","status","targetStatus","confirm","BUSINESS_UPDATE_MAP_INFO","AddToMap","businessUpdateMapInfo","submit","businessInfo","parseFloat","userErrors","name","routes","dashboardRoutes","AuthedPages","routeResult","useRoutes","Boolean","getItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GRAPHQL_URI","process","cache","InMemoryCache","httpLink","HttpLink","uri","fetch","authLink","setContext","_","headers","token","Authorization","client","ApolloClient","link","concat","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d71fb64c.chunk.js","sourcesContent":["export function reportError(errorMesssage) {\n  console.error(errorMesssage)\n  alert(errorMesssage)\n}\n\n// TODO: Match validation with server\nexport function validPhone(phone) {\n  return phone.length > 10 && phone.length <= 15\n}\nexport function validAuthCode(authCode) {\n  return authCode.length === 6\n}\nexport function validWalletName(walletName) {\n  return walletName.length >= 3\n}\nexport function validAddToMapInputs({ walletName, title, latitude, longitude }) {\n  // coordinates validation\n  if (!isFinite(latitude) || !(Math.abs(latitude) <= 90)) {\n    return false\n  }\n  if (!isFinite(longitude) || !(Math.abs(longitude) <= 180)) {\n    return false\n  }\n  return walletName.length >= 3 && title.length >= 3\n}\n\nexport const logout = () => {\n  window.sessionStorage.clear()\n  window.location.href = \"/\"\n}\n\nexport const isAuthenticated = () => {\n  return Boolean(window.sessionStorage.getItem(\"token\"))\n}\n","import React from \"react\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\nimport Container from \"react-bootstrap/Container\"\nimport Image from \"react-bootstrap/Image\"\nimport Button from \"react-bootstrap/Button\"\nimport { logout } from \"../utils\"\n\nfunction Header() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"https://bitcoinbeach.com\">\n          <Image src={process.env.PUBLIC_URL + \"/BBLogo.png\"} rounded />\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/dashboard\">Home</Nav.Link>\n        </Nav>\n        <Nav>\n          <Button onClick={logout} variant=\"dark\">\n            Logout\n          </Button>\n        </Nav>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Header\n","import { gql, useMutation } from \"@apollo/client\"\nimport { navigate } from \"hookrouter\"\nimport React, { useState } from \"react\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport { validAuthCode, validPhone, reportError } from \"../utils\"\nimport Header from \"./Header\"\nimport \"./Login.css\"\n\nconst REQUEST_AUTH_CODE = gql`\n  mutation userRequestAuthCode($input: UserRequestAuthCodeInput!) {\n    mutationData: userRequestAuthCode(input: $input) {\n      errors {\n        message\n      }\n      success\n    }\n  }\n`\n\nconst LOGIN = gql`\n  mutation login($input: UserLoginInput!) {\n    mutationData: userLogin(input: $input) {\n      errors {\n        message\n      }\n      authToken\n    }\n  }\n`\n\nexport default function Login() {\n  const [phone, setPhone] = useState(\"\")\n  const [otp, setOtp] = useState(\"\")\n  const [otpGenerated, setOtpGenerated] = useState(false)\n\n  const [requestAuthCode, { loading: requestAuthCodeLoading }] =\n    useMutation(REQUEST_AUTH_CODE)\n  const [login, { loading: userLoginLoading }] = useMutation(LOGIN)\n\n  const PhoneForm = () => {\n    async function submitPhone(event) {\n      event.preventDefault()\n      const { error, data } = await requestAuthCode({ variables: { input: { phone } } })\n      if (error) {\n        return reportError(error.message)\n      }\n\n      const { errors, success } = data.mutationData\n      if (errors.length > 0) {\n        return reportError(errors[0].message)\n      }\n      if (success) {\n        setOtpGenerated(true)\n      } else {\n        reportError(\"Could not execute operation\")\n      }\n    }\n\n    return (\n      <Form onSubmit={submitPhone}>\n        <Form.Group size=\"lg\">\n          <Form.Control\n            autoFocus\n            type=\"tel\"\n            placeholder=\"Enter phone number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" disabled={!validPhone(phone)}>\n          Login\n        </Button>\n      </Form>\n    )\n  }\n\n  const OTPForm = () => {\n    async function submitOtp(event) {\n      event.preventDefault()\n      const { error, data } = await login({ variables: { input: { phone, code: otp } } })\n\n      if (error) {\n        return reportError(error.message)\n      }\n\n      const { errors, authToken } = data.mutationData\n\n      if (errors.length > 0) {\n        return reportError(errors[0].message)\n      }\n\n      if (authToken) {\n        window.sessionStorage.setItem(\"token\", authToken)\n        navigate(\"/dashboard\", true)\n      } else {\n        reportError(\"Could not execute operation\")\n      }\n    }\n\n    return (\n      <Form onSubmit={submitOtp}>\n        <Form.Group size=\"lg\">\n          <Form.Control\n            autoFocus\n            type=\"text\"\n            placeholder=\"Enter Auth Code\"\n            value={otp}\n            onChange={(e) => setOtp(e.target.value)}\n          />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" disabled={!validAuthCode(otp)}>\n          Login\n        </Button>\n      </Form>\n    )\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"Login\">\n        {!otpGenerated && <PhoneForm />}\n        {otpGenerated && <OTPForm />}\n        {(requestAuthCodeLoading || userLoginLoading) && <p>Loading...</p>}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Container, Row } from \"react-bootstrap\"\nimport Button from \"react-bootstrap/Button\"\nimport Col from \"react-bootstrap/Col\"\nimport Header from \"./Header\"\n\nexport default function Dashboard() {\n  return (\n    <div>\n      <Header />\n      <Container fluid style={{ marginTop: \"50px\" }}>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <Button size=\"lg\" href=\"/dashboard/userDetails\">\n              User Details\n            </Button>\n          </Col>\n          <Col md=\"auto\">\n            <Button size=\"lg\" href=\"/dashboard/addToMap\">\n              Add Business To Map\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n","import { gql, useLazyQuery, useMutation } from \"@apollo/client\"\nimport * as React from \"react\"\nimport { Container, Form } from \"react-bootstrap\"\nimport Button from \"react-bootstrap/Button\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Table from \"react-bootstrap/Table\"\nimport { validPhone, validWalletName, reportError } from \"../utils\"\nimport Header from \"./Header\"\n\n// TODO: use fragment for userDetails\n\nconst GET_USER_BY_PHONE = gql`\n  query getUserDetails($phone: Phone!) {\n    userDetails: userDetailsByPhone(phone: $phone) {\n      id\n      phone\n      walletName\n      level\n      status\n      title\n      coordinates {\n        latitude\n        longitude\n      }\n      createdAt\n    }\n  }\n`\n\nconst GET_USER_BY_USERNAME = gql`\n  query getUserDetails($walletName: WalletName!) {\n    userDetails: userDetailsByWalletName(walletName: $walletName) {\n      id\n      phone\n      walletName\n      level\n      status\n      title\n      coordinates {\n        latitude\n        longitude\n      }\n      createdAt\n    }\n  }\n`\n\nconst USER_UPDATE_STATUS = gql`\n  mutation userUpdateStatus($input: UserUpdateStatusInput!) {\n    mutationData: userUpdateStatus(input: $input) {\n      errors {\n        message\n      }\n      userDetails {\n        id\n        phone\n        walletName\n        level\n        status\n        title\n        coordinates {\n          latitude\n          longitude\n        }\n        createdAt\n      }\n    }\n  }\n`\n\nconst USER_UPDATE_LEVEL = gql`\n  mutation userUpdateLevel($input: UserUpdateLevelInput!) {\n    mutationData: userUpdateLevel(input: $input) {\n      errors {\n        message\n      }\n      userDetails {\n        id\n        phone\n        walletName\n        level\n        status\n        title\n        coordinates {\n          latitude\n          longitude\n        }\n        createdAt\n      }\n    }\n  }\n`\n\n// TODO: Split into 3 components\nfunction UserDetails() {\n  const [phone, setPhone] = React.useState(\"\")\n  const [walletName, setWalletName] = React.useState(\"\")\n  const [userDetails, setUserDetails] = React.useState(\"\")\n\n  // TODO: get rid of onCompleted and use hooks data directly\n\n  const [getUserByPhone, { loading: gettingUserByPhone }] = useLazyQuery(\n    GET_USER_BY_PHONE,\n    {\n      onCompleted({ userDetails }) {\n        setUserDetails(userDetails)\n      },\n      onError(error) {\n        reportError(error.message)\n        setPhone(\"\")\n      },\n    },\n  )\n  const [getUserByUsername, { loading: gettingUserByUsername }] = useLazyQuery(\n    GET_USER_BY_USERNAME,\n    {\n      onCompleted({ userDetails }) {\n        setUserDetails(userDetails)\n      },\n      onError(error) {\n        reportError(error.message)\n        setWalletName(\"\")\n      },\n    },\n  )\n\n  const [updateUserStatus] = useMutation(USER_UPDATE_STATUS, {\n    onCompleted({ mutationData }) {\n      setUserDetails(mutationData.userDetails)\n      alert(`${userDetails.walletName}'s account level has been changed successfully`)\n    },\n    onError(error) {\n      console.error(error)\n      alert(error.message)\n    },\n  })\n\n  const [updateUserLevel] = useMutation(USER_UPDATE_LEVEL, {\n    onCompleted({ mutationData }) {\n      setUserDetails(mutationData.userDetails)\n      alert(`${userDetails.walletName}'s account status has been changed successfully`)\n    },\n    onError(error) {\n      console.error(error)\n      alert(error.message)\n    },\n  })\n\n  function submitPhone(event) {\n    event.preventDefault()\n    getUserByPhone({ variables: { phone } })\n  }\n\n  function submitUsername(event) {\n    event.preventDefault()\n    getUserByUsername({ variables: { walletName } })\n  }\n\n  function changeAccountStatus() {\n    const targetStatus = userDetails.status === \"ACTIVE\" ? \"LOCKED\" : \"ACTIVE\"\n    const confirmation = window.confirm(\n      `Clicking OK will change ${userDetails.phone}'s status to ${targetStatus}. Do you wish to proceed?`,\n    )\n    if (confirmation) {\n      updateUserStatus({\n        variables: { input: { uid: userDetails.id, status: targetStatus } },\n      })\n    }\n  }\n\n  function changeLevel() {\n    updateUserLevel({ variables: { input: { uid: userDetails.id, level: \"TWO\" } } })\n  }\n\n  return (\n    <div>\n      <Header />\n      <Container fluid>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <Form inline onSubmit={submitPhone}>\n              <Form.Group>\n                <Form.Control\n                  type=\"tel\"\n                  placeholder=\"Enter user's phone number\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n                <Button type=\"submit\" disabled={!validPhone(phone)}>\n                  Submit\n                </Button>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md=\"auto\">\n            <Form inline onSubmit={submitUsername}>\n              <Form.Group>\n                <Form.Control\n                  placeholder=\"Enter user's wallet name\"\n                  value={walletName}\n                  onChange={(e) => setWalletName(e.target.value)}\n                />\n                <Button type=\"submit\" disabled={!validWalletName(walletName)}>\n                  Submit\n                </Button>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          {(gettingUserByPhone || gettingUserByUsername) && (\n            <Col md=\"auto\">Getting user details...</Col>\n          )}\n          {userDetails && (\n            <Table bordered hover striped style={{ margin: \"15px\" }}>\n              <thead>\n                <tr>\n                  <th>Phone</th>\n                  <th>Wallet Name</th>\n                  <th>Title</th>\n                  <th>Latitude</th>\n                  <th>Longtitude</th>\n                  <th>Created At</th>\n                  <th>Level</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{userDetails.phone}</td>\n                  <td>{userDetails.walletName}</td>\n                  <td>{userDetails.title}</td>\n                  <td>\n                    {userDetails.coordinates ? userDetails.coordinates.latitude : \"\"}\n                  </td>\n                  <td>\n                    {userDetails.coordinates ? userDetails.coordinates.longitude : \"\"}\n                  </td>\n                  <td>{new Date(parseInt(userDetails.createdAt)).toString()}</td>\n                  <td>\n                    {userDetails.level}{\" \"}\n                    <Button\n                      variant=\"outline-danger\"\n                      disabled={userDetails.level === \"TWO\"}\n                      size=\"sm\"\n                      onClick={changeLevel}\n                    >\n                      Upgrade\n                    </Button>{\" \"}\n                  </td>\n                  <td>\n                    {userDetails.status}{\" \"}\n                    <Button\n                      variant=\"outline-danger\"\n                      size=\"sm\"\n                      onClick={changeAccountStatus}\n                    >\n                      Change\n                    </Button>{\" \"}\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          )}\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default UserDetails\n","import { gql, useMutation } from \"@apollo/client\"\nimport * as React from \"react\"\nimport { Container, Form } from \"react-bootstrap\"\nimport Button from \"react-bootstrap/Button\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport { validAddToMapInputs } from \"../utils\"\nimport Header from \"./Header\"\n\nconst BUSINESS_UPDATE_MAP_INFO = gql`\n  mutation businessUpdateMapInfo($input: BusinessUpdateMapInfoInput!) {\n    mutationData: businessUpdateMapInfo(input: $input) {\n      errors {\n        message\n      }\n      userDetails {\n        id\n      }\n    }\n  }\n`\n\nfunction AddToMap() {\n  const [businessUpdateMapInfo] = useMutation(BUSINESS_UPDATE_MAP_INFO)\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    const { walletName, title, longitude, latitude } = event.target\n\n    const businessInfo = {\n      walletName: walletName.value,\n      title: title.value,\n      longitude: parseFloat(longitude.value),\n      latitude: parseFloat(latitude.value),\n    }\n\n    if (!validAddToMapInputs(businessInfo)) {\n      alert(\"Invalid input values\")\n      return\n    }\n\n    const { data, errors } = await businessUpdateMapInfo({\n      variables: {\n        input: businessInfo,\n      },\n    })\n\n    // TODO: update UI (instead of alerts)\n\n    if (errors || data?.mutationData?.errors.length > 0) {\n      console.error({ errors, userErrors: data.mutationData.errors })\n      alert(\"Error adding merchant to map\")\n    } else {\n      alert(\"Added successfully!\")\n    }\n\n    walletName.value = \"\"\n    title.value = \"\"\n    longitude.value = \"\"\n    latitude.value = \"\"\n  }\n\n  return (\n    <div>\n      <Header />\n      <Container fluid>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <Form onSubmit={submit}>\n              <Form.Group>\n                <Form.Control placeholder=\"Enter wallet name\" name=\"walletName\" />\n                <Form.Control placeholder=\"Enter title\" name=\"title\" />\n                <Form.Control placeholder=\"Enter latitude\" name=\"latitude\" />\n                <Form.Control placeholder=\"Enter longitude\" name=\"longitude\" />\n                <Button type=\"submit\">Submit</Button>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default AddToMap\n","import * as React from \"react\"\nimport Login from \"./components/Login\"\nimport { useRoutes, navigate } from \"hookrouter\"\nimport Dashboard from \"./components/Dashboard\"\nimport UserDetails from \"./components/UserDetails\"\nimport AddToMap from \"./components/AddToMap\"\nimport { isAuthenticated } from \"./utils\"\n\nconst routes = {\n  \"/\": () => <Login />,\n  \"/dashboard*\": () => <AuthedPages />,\n}\n\nconst dashboardRoutes = {\n  \"/\": () => <Dashboard />,\n  \"/userDetails\": () => <UserDetails />,\n  \"/addToMap\": () => <AddToMap />,\n}\n\nconst AuthedPages = () => {\n  const routeResult = useRoutes(dashboardRoutes)\n  if (!isAuthenticated()) {\n    navigate(\"/\")\n  }\n  return routeResult\n}\n\nfunction App() {\n  const routeResult = useRoutes(routes)\n\n  return routeResult || <Login />\n}\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","export const GRAPHQL_URI = process.env.GRAPHQL_URI\n\nif (!GRAPHQL_URI) {\n  throw new Error(\"Missing env variables\")\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\"\nimport { setContext } from \"@apollo/client/link/context\"\nimport { GRAPHQL_URI } from \"./config\"\n\nconst cache = new InMemoryCache()\nconst httpLink = new HttpLink({ uri: GRAPHQL_URI, fetch })\n\nconst authLink = setContext((_, { headers }) => {\n  const token = window.sessionStorage.getItem(\"token\")\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  }\n})\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache,\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}